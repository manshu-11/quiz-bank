{"version":3,"file":"static/js/850.a1c8673b.chunk.js","mappings":"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","sources":["firebase/firebase.js","Pages/UserInfo.js","Pages/QuizSetting.js","Pages/Login.js","Components/UserName.js","Pages/Intro.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC13j7W8hu1ELa8TF7XRlxaDpDxCmUmE50\",\r\n  authDomain: \"quiz-data-e8967.firebaseapp.com\",\r\n  databaseURL: \"https://quiz-data-e8967-default-rtdb.firebaseio.com\",\r\n  projectId: \"quiz-data-e8967\",\r\n  storageBucket: \"quiz-data-e8967.firebasestorage.app\",\r\n  messagingSenderId: \"730033720868\",\r\n  appId: \"1:730033720868:web:01d07ef45bcf63a21dd2b1\",\r\n  databaseURL: \"https://quiz-data-e8967-default-rtdb.firebaseio.com/\",\r\n};\r\n\r\nexport const app = initializeApp(firebaseConfig);\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  getDatabase,\r\n  query,\r\n  push,\r\n  equalTo,\r\n  ref,\r\n  set,\r\n  get,\r\n  orderByChild,\r\n} from \"firebase/database\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  updateProfile,\r\n} from \"firebase/auth\";\r\nimport { app } from \"../firebase/firebase\";\r\nconst db = getDatabase(app);\r\nconst auth = getAuth(app);\r\nconst usersRef = ref(db, \"userData\");\r\nfunction UserInfo({ setHide }) {\r\n  const [userData, setUserData] = useState({\r\n    fname: \"\",\r\n    gender: \"\",\r\n    email: \"\",\r\n    setPass: \"\",\r\n    age: \"\",\r\n    city: \"\",\r\n  });\r\n  const onInputChange = (e) => {\r\n    setUserData((pre) => {\r\n      return { ...pre, [e.target.name]: e.target.value.trim() };\r\n    });\r\n  };\r\n  const onFormSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const q = query(usersRef, orderByChild(\"email\"), equalTo(userData.email));\r\n      const snapshot = await get(q);\r\n      if (snapshot.exists()) {\r\n        alert(\"❌ Email already exists!\");\r\n        return false;\r\n      }\r\n      try {\r\n        const userCredential = await createUserWithEmailAndPassword(\r\n          auth,\r\n          userData.email,\r\n          userData.setPass\r\n        );\r\n        const user = userCredential.user;\r\n        await updateProfile(user, {\r\n          displayName: userData.fname,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error creating user:\", error.message);\r\n      }\r\n      const newRef = push(ref(db, \"userData\"));\r\n      await set(newRef, userData);\r\n      alert(\"✅ Data saved successfully!\");\r\n      setUserData({\r\n        fname: \"\",\r\n        gender: \"\",\r\n        email: \"\",\r\n        setPass: \"\",\r\n        age: \"\",\r\n        city: \"\",\r\n      });\r\n      setHide({ action: true, button: \"showLogin\" });\r\n    } catch (error) {\r\n      console.error(\"Error saving data:\", error);\r\n      alert(\"❌ Failed to save data.\");\r\n    }\r\n  };\r\n  const handleGoLoginPage = () => {\r\n    setHide({ action: true, button: \"showLogin\" });\r\n  };\r\n  return (\r\n    <div className=\"user-info-content\">\r\n      <form onSubmit={(e) => onFormSubmit(e)}>\r\n        <div className=\"option\">\r\n          <label className=\"info-label\" htmlFor=\"fname\">\r\n            Full Name:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"text\"\r\n            onChange={(e) => onInputChange(e)}\r\n            value={userData.fname}\r\n            name=\"fname\"\r\n            requirednp\r\n          />\r\n        </div>\r\n        <div className=\"option\">\r\n          <label className=\"info-label\" htmlFor=\"gender\">\r\n            Gender:{\" \"}\r\n          </label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"male\"\r\n            required\r\n            onChange={(e) => onInputChange(e)}\r\n          />\r\n          <label htmlFor=\"male\">Male</label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"female\"\r\n            onChange={(e) => onInputChange(e)}\r\n          />\r\n          <label htmlFor=\"female\">Female </label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"gender\"\r\n            value=\"other\"\r\n            onChange={(e) => onInputChange(e)}\r\n          />\r\n          <label htmlFor=\"other\">Other </label>\r\n        </div>\r\n        <div className=\"option\">\r\n          <label className=\"info-label\" htmlFor=\"email\">\r\n            Login Email ID:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={userData.email}\r\n            onChange={(e) => onInputChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"option\">\r\n          <label className=\"info-label\" htmlFor=\"setPass\">\r\n            Set Password:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"password\"\r\n            name=\"setPass\"\r\n            value={userData.setPass}\r\n            onChange={(e) => onInputChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"option\">\r\n          <label className=\"info-label\" htmlFor=\"age\">\r\n            Age:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"number\"\r\n            name=\"age\"\r\n            value={userData.age}\r\n            min=\"10\"\r\n            max=\"100\"\r\n            onChange={(e) => onInputChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"option\">\r\n          <label className=\"info-label\" htmlFor=\"city\">\r\n            City:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"text\"\r\n            name=\"city\"\r\n            value={userData.city}\r\n            onChange={(e) => onInputChange(e)}\r\n            maxLength=\"50\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"button-box\">\r\n          <button type=\"submit\">SIGNIN</button>\r\n          <span> - or go - </span>\r\n          <button onClick={handleGoLoginPage} type=\"button\">\r\n            LOGIN\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserInfo;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateIsQuizStart, updateQuizSetting } from \"../Redux/QuizSlice\";\r\n\r\nfunction QuizSetting() {\r\n  const dispatch = useDispatch();\r\n  const [quizSetting, setQuizSetting] = useState({\r\n    randomOption: \"\",\r\n    randomQuestion: \"\",\r\n    topic: \"\",\r\n  });\r\n  const onSettingChange = (e) => {\r\n    setQuizSetting((pre) => {\r\n      return { ...pre, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n  const onStartQuiz = (e) => {\r\n    e.preventDefault();\r\n    if (quizSetting.topic !== \"\") {\r\n      dispatch(updateQuizSetting(quizSetting));\r\n      dispatch(updateIsQuizStart(true));\r\n    } else {\r\n      alert(\"🤔 Please select your favorite topic\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"quiz-setting-content\">\r\n      <div className=\"option\">\r\n        <label className=\"info-label\" htmlFor=\"fname\">\r\n          Quiz Topic:\r\n        </label>\r\n        <select\r\n          name=\"topic\"\r\n          id=\"topic\"\r\n          onChange={(e) => onSettingChange(e)}\r\n          required\r\n        >\r\n          <option value=\"\">Select</option>\r\n          <option value=\"entertainment\">Entertainment</option>\r\n          <option value=\"technologies\">Technologies</option>\r\n          <option value=\"space\">Space</option>\r\n          <option value=\"sport\">Sport</option>\r\n          <option value=\"mechanical\">Mechanical</option>\r\n          <option value=\"agriculture\">Agriculture</option>\r\n          <option value=\"science\">Science</option>\r\n          <option value=\"music\">Music</option>\r\n          <option value=\"travel\">Travel</option>\r\n          <option value=\"spiritual\">Spiritual</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"option\">\r\n        <label className=\"info-label\" htmlFor=\"qRandom\">\r\n          Question Random:{\" \"}\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"randomQuestion\"\r\n          value=\"true\"\r\n          required\r\n          onChange={(e) => onSettingChange(e)}\r\n        />\r\n        <label htmlFor=\"true\">True</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"randomQuestion\"\r\n          value=\"false\"\r\n          onChange={(e) => onSettingChange(e)}\r\n        />\r\n        <label htmlFor=\"false\">False </label>\r\n      </div>\r\n      <div className=\"option\">\r\n        <label className=\"info-label\" htmlFor=\"qRandom\">\r\n          Option Random:{\" \"}\r\n        </label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"randomOption\"\r\n          value=\"true\"\r\n          required\r\n          onChange={(e) => onSettingChange(e)}\r\n        />\r\n        <label htmlFor=\"true\">True</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"randomOption\"\r\n          value=\"false\"\r\n          onChange={(e) => onSettingChange(e)}\r\n        />\r\n        <label htmlFor=\"false\">False </label>\r\n      </div>\r\n      <button onClick={(e) => onStartQuiz(e)}>Start Quiz</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizSetting;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { app } from \"../firebase/firebase\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserDetail } from \"../Redux/QuizSlice\";\r\nconst auth = getAuth(app);\r\nfunction Login({ setHide }) {\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n  const [userPassword, setUserPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [userData, setUserData] = useState(null);\r\n  const user = useSelector((state) => state.QuizBank.userDetails);\r\n  const dispatch = useDispatch();\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    signInWithEmailAndPassword(auth, userEmail, userPassword)\r\n      .then((userCredential) => {\r\n        const userDetails = {\r\n          name: userCredential._tokenResponse.displayName,\r\n          email: userCredential._tokenResponse.email,\r\n        };\r\n        setUserData(userDetails);\r\n        dispatch(setUserDetail(userDetails));\r\n        setUserEmail(\"\");\r\n        setUserPassword(\"\");\r\n        setHide({ action: true, button: \"ShowQuizSetting\" });\r\n        alert(`✅ Login successful! Welcome back 🎉`);\r\n      })\r\n      .catch((error) => {\r\n        const errorCode = error.code;\r\n        const errorText = errorCode.split(\"/\")[1].split(\"-\").join(\" \");\r\n        setError(errorText.charAt(0).toUpperCase() + errorText.slice(1));\r\n        alert(`❌ ${errorText}`);\r\n      });\r\n  };\r\n  const handleEmailChange = (value) => {\r\n    setUserEmail(value);\r\n  };\r\n  const handlePasswordChange = (value) => {\r\n    setUserPassword(value);\r\n  };\r\n  const handleGotoSignIn = () => {\r\n    setHide({ action: true, button: \"showUserInfo\" });\r\n  };\r\n  useEffect(() => {\r\n    setUserData(user);\r\n  }, [user]);\r\n  return (\r\n    <>\r\n      <form onSubmit={(e) => handleLogin(e)}>\r\n        <div className=\"option\">\r\n          <label className=\"info-label\" htmlFor=\"email\">\r\n            Email ID:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={userEmail}\r\n            onChange={(e) => handleEmailChange(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"option\">\r\n          <label className=\"info-label\" htmlFor=\"fname\">\r\n            Password:{\" \"}\r\n          </label>\r\n          <input\r\n            className=\"input-box\"\r\n            type=\"password\"\r\n            onChange={(e) => handlePasswordChange(e.target.value)}\r\n            value={userPassword}\r\n            maxLength={100}\r\n            name=\"fname\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"button-box\">\r\n          <button type=\"submit\">LOGIN</button>\r\n          <span> - or go to - </span>\r\n          <button type=\"button\" onClick={handleGotoSignIn}>\r\n            SIGNIN\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\nfunction UserName({ user }) {\r\n  return <p>Welcome, {user.displayName}</p>;\r\n}\r\n\r\nexport default UserName;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Intro.css\";\r\nimport UserInfo from \"./UserInfo\";\r\nimport QuizSetting from \"./QuizSetting\";\r\nimport Login from \"./Login\";\r\nimport UserName from \"../Components/UserName\";\r\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\r\nimport {\r\n  clearUserAns,\r\n  setUserDetail,\r\n  updateCorrectCount,\r\n  updateCurrentQuestionNo,\r\n  updateIsQuizStart,\r\n} from \"../Redux/QuizSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst auth = getAuth();\r\n\r\nfunction Intro() {\r\n  const [hide, setHide] = useState({ action: false, button: \"\" });\r\n\r\n  const quizIntroRef = useRef();\r\n  const userInfoRef = useRef();\r\n  const loginInfoRef = useRef();\r\n  const qSettingRef = useRef();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        const userDetails = {\r\n          name: user.displayName,\r\n          email: user.email,\r\n        };\r\n        dispatch(setUserDetail(userDetails));\r\n        handleAnimate(quizIntroRef, qSettingRef);\r\n      }\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!hide.action) return;\r\n\r\n    const handleAnimationEnd = (nextRef) => () => {\r\n      nextRef.current.classList.add(\"show\");\r\n      setHide({ action: false, button: \"\" });\r\n    };\r\n\r\n    const hideAndShow = (fromRef, toRef) => {\r\n      fromRef.current.classList.remove(\"show\");\r\n      fromRef.current.classList.add(\"hide\");\r\n      fromRef.current.addEventListener(\r\n        \"animationend\",\r\n        handleAnimationEnd(toRef),\r\n        {\r\n          once: true,\r\n        }\r\n      );\r\n    };\r\n\r\n    if (hide.button === \"showLogin\") {\r\n      hideAndShow(userInfoRef, loginInfoRef);\r\n    } else if (hide.button === \"ShowQuizSetting\") {\r\n      hideAndShow(loginInfoRef, qSettingRef);\r\n    } else if (hide.button === \"showUserInfo\") {\r\n      hideAndShow(loginInfoRef, userInfoRef);\r\n    }\r\n  }, [hide]);\r\n\r\n  const handleAnimate = (hideRef, showRef) => {\r\n    hideRef.current.classList.add(\"hide\");\r\n\r\n    const onEnd = () => {\r\n      showRef.current.classList.add(\"show\");\r\n      hideRef.current.removeEventListener(\"animationend\", onEnd);\r\n    };\r\n\r\n    hideRef.current.addEventListener(\"animationend\", onEnd);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    signOut(auth)\r\n      .then(() => {\r\n        alert(\"You have been signed out 👋\");\r\n        dispatch(updateIsQuizStart(false));\r\n        dispatch(updateCurrentQuestionNo(0));\r\n        dispatch(updateCorrectCount(0));\r\n        dispatch(clearUserAns());\r\n\r\n        qSettingRef.current.classList.remove(\"show\");\r\n        loginInfoRef.current.classList.add(\"show\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error signing out:\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"intro-box\">\r\n      <div className=\"user-info-box\">\r\n        {auth.currentUser && (\r\n          <>\r\n            <UserName user={auth.currentUser} />\r\n            <button type=\"button\" onClick={handleLogout}>\r\n              LOGOUT\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n\r\n      <div ref={quizIntroRef} className=\"quiz-intro\">\r\n        <div className=\"text-box\">\r\n          <p>🌟 Welcome!</p>\r\n          <p>\r\n            Whether you're exploring the rhythms of <b>music</b>, the mysteries\r\n            of <b>space</b>, or the wonders of <b>science</b>, you've just\r\n            stepped into a world where <b>entertainment</b> meets{\" \"}\r\n            <b>innovation</b>. From the fields of <b>agriculture</b> to the\r\n            frontiers of <b>technology</b>, from <b>spiritual</b> insight to the\r\n            thrill of <b>sports</b>, from <b>programming logic</b> to\r\n            breathtaking <b>travel</b> adventures — there's something here for\r\n            every curious mind.\r\n          </p>\r\n          <p>Let's dive in and discover it all together!</p>\r\n          <p>🌍🚀🎶💻⚽️🌱🧘‍♀️</p>\r\n        </div>\r\n        <div className=\"buttonBox\">\r\n          <button onClick={() => handleAnimate(quizIntroRef, userInfoRef)}>\r\n            SIGNIN\r\n          </button>\r\n          <button onClick={() => handleAnimate(quizIntroRef, loginInfoRef)}>\r\n            LOGIN\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div ref={userInfoRef} className=\"user-info\">\r\n        <UserInfo setHide={setHide} />\r\n      </div>\r\n\r\n      <div ref={loginInfoRef} className=\"login-info\">\r\n        <Login setHide={setHide} />\r\n      </div>\r\n\r\n      <div ref={qSettingRef} className=\"q-setting\">\r\n        <QuizSetting setHide={setHide} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Intro;\r\n"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","getDatabase","auth","getAuth","usersRef","ref","_ref","setHide","userData","setUserData","useState","fname","gender","email","setPass","age","city","onInputChange","e","pre","target","name","value","trim","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","q","query","orderByChild","equalTo","get","exists","alert","user","createUserWithEmailAndPassword","updateProfile","displayName","error","console","message","newRef","push","set","action","button","onFormSubmit","htmlFor","type","onChange","requirednp","required","min","max","maxLength","onClick","handleGoLoginPage","dispatch","useDispatch","quizSetting","setQuizSetting","randomOption","randomQuestion","topic","onSettingChange","id","updateQuizSetting","updateIsQuizStart","onStartQuiz","userEmail","setUserEmail","userPassword","setUserPassword","setError","useSelector","state","QuizBank","userDetails","useEffect","_Fragment","signInWithEmailAndPassword","then","userCredential","_tokenResponse","setUserDetail","catch","errorText","code","split","join","charAt","toUpperCase","slice","handleLogin","handleEmailChange","handlePasswordChange","handleGotoSignIn","hide","quizIntroRef","useRef","userInfoRef","loginInfoRef","qSettingRef","unsubscribe","onAuthStateChanged","handleAnimate","hideAndShow","fromRef","toRef","nextRef","current","classList","remove","add","addEventListener","once","hideRef","showRef","onEnd","removeEventListener","currentUser","UserName","handleLogout","signOut","updateCurrentQuestionNo","updateCorrectCount","clearUserAns","UserInfo","Login","QuizSetting"],"sourceRoot":""}